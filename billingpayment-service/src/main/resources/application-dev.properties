spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.config.name=billingpayment-service
server.port=8082
server.servlet.context-path=/api/v1/

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=1234
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.genersate_statistics=true
spring.datasource.driver-class-name=org.postgresql.Driver

#Kafka
#Kafka
spring.kafka.consumer.group-id=batch_orders_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.Deserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.Deserializer
spring.kafka.consumer.bootstrap-servers=localhost:9095
spring.kafka.producer.batch-size=5
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.Deserializer
spring.kafka.producer.kay-serializer=org.apache.kafka.common.serialization.Deserializer