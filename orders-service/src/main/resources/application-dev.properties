spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.config.name=billing_payment-service
server.port=8080
server.servlet.context-path=/api/v1
## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=1234
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.datasource.driver-class-name=org.postgresql.Driver
billing-payment-service.url=http://localhost:8082/api/v1/
shipping-management-service.url=http://localhost:8081/api/v1/

#spring.batch.initialize-schema=always

#Kafka
spring.kafka.consumer.group-id=batch_orders_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.Deserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.Deserializer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.producer.batch-size=5
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.Deserializer
spring.kafka.producer.kay-serializer=org.apache.kafka.common.serialization.Deserializer


#healthcheck
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.endpoints.web.exposure.include=health,info
management.endpoints.web.exposure.exclude=